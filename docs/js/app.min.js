!function($){"use strict";
//***************************************
// Main Application
// To get direct links to audio files in Google Drive:
// http://directlink.booogle.net/
//***************************************
angular.module("app",["ui.router","ngAnimate"]).run(["$sce","$timeout","$rootScope","$state","$stateParams",function($sce,$timeout,$rootScope,$state,$stateParams){
// It's very handy to add references to $state and $stateParams to the
// $rootScope
$rootScope.$state=$state,$rootScope.$stateParams=$stateParams;var Airtable=require("airtable");$rootScope.Airtable=new Airtable({apiKey:"keyNIbNk17BU31gT8"}).base("appKLD3WxfSgA0ad4")}]).config(["$locationProvider","$stateProvider","$urlRouterProvider",function($locationProvider,$stateProvider,$urlRouterProvider){
/////////////////////////////
// Redirects and Otherwise //
/////////////////////////////
// Use $urlRouterProvider to configure any redirects (when) and invalid
// urls (otherwise).
$urlRouterProvider.when("/admin","/admin/students"),
//.otherwise(token ? '/sites' : '/start');
//////////////////////////
// State Configurations //
//////////////////////////
$stateProvider.state("students",{url:"/admin/students",templateUrl:"views/students.html",
// auth: true,
/*resolve: {
                cards: function ($stateParams, $rootScope, $http) {

                }
            },*/
controller:function($scope,$rootScope,$state,$filter,$http){var data=[];$rootScope.Airtable("Students").select({sort:[{field:"Last Name",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,data.push(record.fields)}),fetchNextPage()},function(error){$scope.students=data,$scope.$apply()})}}).state("editAssessment",{url:"/admin/student/:student/:type",template:'<div assessment edit="true" type="type" student="student"></div>',controller:function($scope,$rootScope,$state,$filter,$http){$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("viewAssessment",{url:"/student/:student/:type",template:'<div assessment type="type" student="student"></div>',controller:function($scope,$rootScope,$state,$filter,$http){$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("printAssessment",{url:"/print/:students",templateUrl:"views/print.html",controller:function($scope,$rootScope,$state,$filter,$http){$scope.students=$state.params.students.split(",")}})}]),angular.module("app").directive("assessment",function($rootScope,$state,$sce,$timeout){return{restrict:"A",replace:!0,transclude:!0,scope:{type:"=",student:"=",assessment:"=",edit:"="},templateUrl:"views/assessment.html",link:function($scope,$element,$attrs,$window){$scope.type=$scope.type.replace(/\b\S/g,function(t){return t.toUpperCase()}),$timeout(function(){$scope.link=window.location.href.replace("/admin","")},0),console.log($scope);var colors=[];$rootScope.Airtable("Colors").select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,colors.push(record.fields)}),fetchNextPage()},function(error){$scope.colors=colors,console.log(colors),$scope.$apply()});var items=[];$rootScope.Airtable($scope.type).select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,items.push(record.fields)}),fetchNextPage()},function(error){$scope.items=items,console.log(items),$scope.$apply()});var groups=[];$rootScope.Airtable($scope.type+" Groups").select({sort:[{field:"Order",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,groups.push(record.fields)}),fetchNextPage()},function(error){$scope.groups=groups,$scope.$apply()});var getStudents=function(){$rootScope.Airtable("Students").find($state.params.student,function(err,record){record.fields.id=record.id,$scope.student=record.fields,$scope.$apply();var assessments=[],disabledItems={},sum=0;$rootScope.Airtable($scope.type+" Assessments").select({filterByFormula:'{Student} = "'+record.fields.ID+'"',sort:[{field:"Date",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,sum+=record.fields.Items?record.fields.Items.length:0,record.fields.sum=sum,assessments.push(record.fields)}),fetchNextPage()},function(error){$scope.assessments=assessments;for(var j=0;j<assessments.length;j++)if(assessments[j].Items)for(var i=0;i<assessments[j].Items.length;i++)disabledItems[assessments[j].Items[i]]=assessments[j].Color[0];$scope.disabledItems=disabledItems,$scope.$apply()})})};getStudents(),$scope.linkClick=function($event){$event.target.select()},$scope.toggleWord=function(word){var index=$scope.assessment.Items.indexOf(word);index!=-1?$scope.assessment.Items.splice(index,1):$scope.assessment.Items.push(word)},$scope.setColor=function(color){$scope.assessment.Color[0]=color.id,$scope.activeColor=color},$scope.newAssessment=function(){$scope.assessment={Color:[!1],Items:[],Student:[$state.params.student],Date:new Date}},$scope.clickAssessment=function(item){if($scope.assessment&&item.id==$scope.assessment.id)$scope.assessment=null;else for(var j=0;j<$scope.assessments.length;j++)if($scope.assessments[j].id==item.id){$scope.assessments[j].Date=new Date($scope.assessments[j].Date),$scope.assessment=$scope.assessments[j];for(var i=0;i<$scope.color;i++)$scope.color[i].id==$scope.assessment.Color[0]&&$scope.setColor($scope.color[i]);console.log($scope.assessment)}},$scope.cancelAssessment=function(){$scope.assessment=null},$scope.saveAssessment=function(assessment){if(!assessment.Color||!assessment.Color[0])return alert("You must select a color"),!1;if(assessment.Date=new Date(assessment.Date).toISOString().slice(0,10),assessment.id){var id=assessment.id;delete assessment.id,delete assessment.ID,delete assessment.$$hashKey,console.log(assessment),$rootScope.Airtable($scope.type+" Assessments").update(id,assessment,function(err,record){return err?void console.error(err):($scope.assessment=null,void getStudents())})}else console.log(assessment),$rootScope.Airtable($scope.type+" Assessments").create(assessment,function(err,record){return err?void console.log(err):($scope.assessment=null,void getStudents())});var studentEdit={};studentEdit["Last "+$scope.type+" Assessment"]=assessment.Date,$rootScope.Airtable("Students").update($scope.student.id,studentEdit,function(err,record){return err?void console.log(err):($scope.assessment=null,void getStudents())})}}}})}(jQuery);